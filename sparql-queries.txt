PREFIX : <http://coolfutures.net/rdf/2021/edtech#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dcterms: <http://purl.org/dc/terms/>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX edtech: <http://coolfutures.net/rdf/2021/edtech#>
PREFIX lrmi: <http://purl.org/dcx/lrmi-terms/>


######### basic SKOS searches ########

##### basic INSERTs first

##### construct the narrower relation 

construct {?c1 skos:narrower ?c2}  
where
{
    ?c2  skos:broader ?c1
}

############ Add the narrower relation to the graph

insert {?c1 skos:narrower ?c2}  
where
{
    ?c2  skos:broader ?c1
}


######## skos one step up 

select  ?concept1 ?concept2
{
    ?concept1 skos:broader ?concept2
}

######### to the top from a concept

select  ?concept2
{
    :LabBasedLearning skos:broader+/skos:broader ?concept2
}



### Walk down and find all works with are narrower than the Outcomes concept
# The `+` does path traversal. 

select  ?work ?concept2
{
    :Outcomes skos:narrower+ ?concept2.
    ?work :assessedOutcome ?concept2.
}


########### Counting things

### Number of publications by year in DESCending order

SELECT ?year (COUNT(?year) AS ?yearTotal)
        WHERE
	{ 
    ?work dc:date ?year .
    }
GROUP BY ?year 
ORDER BY DESC(?year)

# Count by category codes 
SELECT ?code (COUNT(?code) AS ?codeTotal)
        WHERE
	{ 
    ?work :technology  ?code .
    }
GROUP BY ?code
ORDER BY ?codeTotal


###  Count by a specific code 
SELECT ?code (COUNT(?code) AS ?codeTotal)
        WHERE
	{ 
    ?work :technology  ?code .
     FILTER (?code = :ComputerModel)
    }
GROUP BY ?code


### Walk down and find all works that are narrower than the Outcomes concept
# The `+` does path traversal. 

# We also need the "base" category count included. 
# As in: This and more specific. 

select  ?work ?concept
{
    :ComputerModel skos:narrower+ ?concept.
    ?work :technology ?concept.
}



### Walk down and find all works in the base catogory and narrower categories
# The `+` does path traversal. 

SELECT   ?work ?concept
WHERE 
{
    {?work :technology ?concept.
    FILTER (?concept = :ComputerModel)} # :ComputerModel is the base category
 UNION
    {:ComputerModel skos:narrower+ ?concept.
    ?work :technology ?concept.}

}

### count all categories inclucing a and more specific than a  particular concept 
# The `+` does path traversal. 
# :ComputerModel is the base category in this query. 

SELECT   ?concept (COUNT(?concept) AS ?conceptCount) 
WHERE 
{
    {?work :technology ?concept.
    FILTER (?concept = :ComputerModel)} 
 UNION
    {:ComputerModel skos:narrower+ ?concept.
    ?work :technology ?concept.}

}
GROUP BY ?concept



### Sum over hierarchical codes 
# Needs a starting code and then going downwards. 

SELECT   (COUNT(?concept) AS ?conceptCount) 
WHERE 
{
    {?work :technology ?concept.
    FILTER (?concept = :ComputerModel)} # :ComputerModel is the base category
 UNION
    {:ComputerModel skos:narrower+ ?concept.
    ?work :technology ?concept.}

}






####### The matching rule for keywords ######

CONSTRUCT {?work :science ?concept}
WHERE
{
   ?target a skos:concept . 
   ?target :keyWords ?targetWords . 
   ?work a dcterms:BibliographicResource. 
   ?work :indexKeywords ?sourceWords . 
   BIND (CONTAINS(?sourceWords, ?indexKeyWords)  AS ?concept)  
}


######### basic searches ########

#### search by Authors
# are a multi-author string, so we need the index pattern

# Just a basic single author, see keyword searches below for additional patterns


SELECT ?work ?year ?authors ?title
  WHERE
  {
    ?work a dcterms:BibliographicResource . 
    ?work dcterms:creator ?authors . 
    ?work dcterms:title ?title . 
    ?work dcterms:issued ?year . 
  FILTER (CONTAINS(?authors, "Niebert") ).
  }


#### search by Keywords
# are a multifield, so we need the index pattern
# Note that keywords are in small caps. 

# Single keyword

SELECT ?work ?year ?authors ?title
  WHERE
  {
    ?work a dcterms:BibliographicResource . 
    ?work dcterms:creator ?authors . 
    ?work dcterms:title ?title . 
    ?work dcterms:issued ?year . 
    ?work :indexKeywords ?keywords . 
  FILTER (CONTAINS(?keywords, "climate") ).
  }

# multiple keyword: OR

SELECT ?work ?year ?authors ?title
  WHERE
{
  {
    ?work a dcterms:BibliographicResource . 
    ?work dcterms:creator ?authors . 
    ?work dcterms:title ?title . 
    ?work dcterms:issued ?year . 
    ?work :indexKeywords ?keywords . 
  FILTER (CONTAINS(?keywords, "climate") ).
  }
  UNION 
  {?work :indexKeywords ?keywords .
  FILTER (CONTAINS(?keywords, "attitude") )}
}

# multiple keyword: AND

SELECT ?work ?year ?authors ?title
  WHERE
  {
    ?work a dcterms:BibliographicResource . 
    ?work dcterms:creator ?authors . 
    ?work dcterms:title ?title . 
    ?work dcterms:issued ?year . 
    ?work :indexKeywords ?keywords . 
  FILTER (CONTAINS(?keywords, "climate") ).
  FILTER (CONTAINS(?keywords, "attitude") )
  }
















####### Mapping the keywords to concepts   ###########

### Make author keywords index keywords
# in case there are no indexKeywords

INSERT {?work :indexKeywords ?index2}
# SELECT ?work ?index2
  WHERE
  {
   ?work a dcterms:BibliographicResource . 
   ?work edtech:authorKeywords ?index2 . 
  FILTER NOT EXISTS {?work :indexKeywords ?index1}
  }


### Concept eLearning and other high-level concepts

INSERT {?work :technology :eLearning}
where
{
    ?work a dcterms:BibliographicResource . 
    ?work edtech:indexKeywords ?index . 
    FILTER (CONTAINS(?index,"e-learning") ). 
    
}

INSERT {?work :technology :CAI}
WHERE 
{
  {
    ?work edtech:indexKeywords ?index . 
    FILTER (CONTAINS(?index,"computer-aided instruction") ).
  }
  UNION 
    {?work edtech:indexKeywords ?index . 
    FILTER (CONTAINS(?index, "computer-based instruction") ).}
}



### Games

INSERT {?work :technology :Game}
WHERE
{
    {
    ?work edtech:indexKeywords ?index . 
     FILTER (CONTAINS(?index,"game") ).}
  UNION
      {
    ?work edtech:indexKeywords ?index . 
     FILTER (CONTAINS(?index,"computer game") ).}
  UNION
    {
    ?work edtech:indexKeywords ?index . 
     FILTER (CONTAINS(?index,"digital game") ).}
  UNION
    {
    ?work edtech:indexKeywords ?index . 
     FILTER (CONTAINS(?index,"game-based learning") ).}
  UNION
    {
    ?work edtech:indexKeywords ?index . 
     FILTER (CONTAINS(?index,"educational game") ).}
}

INSERT {?work :technology :VideoGame}
WHERE
{
    {
    ?work edtech:indexKeywords ?index . 
     FILTER (CONTAINS(?index,"video game")).}
   UNION
    {
    ?work edtech:indexKeywords ?index . 
     FILTER (CONTAINS(?index,"videogame")).}
}


### Programming


INSERT {?work :technology :Programming}
WHERE
{
   {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"programming") ).}
     UNION
    {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"coding") ).}
    UNION
    {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"software engineering") ).}
    UNION
    {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"software testing") ).}
	UNION
    {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"software prototyping") ).}
    UNION
    {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"software design") ).}
    UNION
    {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"software development") ).}
    UNION
    {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"program language") ).}
    UNION
    {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"software architecture") ).}
}


### Knowledge technologies


INSERT {?work :technology :ConceptMapping}
WHERE
{
   {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"concept mapping") ).}
    UNION
    {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"cmaptools") ).}
}



### MultiMedia

INSERT {?work :technology :MultiMedia}
WHERE
{
    {?work :indexKeywords ?index . 
        FILTER (CONTAINS(?index, "digital story telling")) .} 
    UNION 
    {?work :indexKeywords ?index . 
                FILTER (CONTAINS(?index, "video")). } 
    UNION 
    {?work :indexKeywords ?index . 
                FILTER (CONTAINS(?index, "photography")). } 
    UNION 
    {?work :indexKeywords ?index . 
                FILTER (CONTAINS(?index, "computer graphics")). } 
    UNION 
    {?work :indexKeywords ?index . 
                FILTER (CONTAINS(?index, "music")). } 
    UNION 
    {?work :indexKeywords ?index . 
                FILTER (CONTAINS(?index, "audio")) .} 
    UNION 
    {?work :indexKeywords ?index . 
                FILTER (CONTAINS(?index, "language technology")) .} 
}


INSERT {?work :technology :VirtualReality}
WHERE
{
   {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"virtual reality") ).}
    UNION
    {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"Unity3D") ).}
}


INSERT {?work :technology :AugmentedReality}
WHERE
{
   {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"augmented reality") ).}
    UNION
    {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"augmentation") ).}
}




### Research software applications

INSERT {?work :technology :GIS}
WHERE
{
   {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"geographic information system")).}
   UNION
   {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"geomapping")).}
     UNION
   {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"google earth")).}
       UNION
   {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"google maps")).}
}

INSERT {?work :technology :SensingAndRecording}
WHERE
{
   {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"sensing")).}
   UNION
   {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"recording")).}
}

### Mobile learning 

INSERT {?work :technology :MobileLearning}
WHERE
{
   {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"mobile learning")).}
     UNION
   {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"mobile")).}
   UNION
   {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"smartphone")).}
     UNION
   {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"phone")).}
       UNION
   {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"tablet")).}
}

INSERT {?work :technology :DigitalArchive}
WHERE
{
   {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"digital archive")).}
    UNION
    {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"digital archives")).}
}

#### Research methods used in a study

# combine these with union after a while?


INSERT {?work :researchMethod :LitReview}
WHERE
{
   {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"literature review")).}
}

INSERT {?work :researchMethod :SurveyMethod}
WHERE
{
   {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"survey")).}
   UNION
     {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"questionnaire")).}
}

INSERT {?work :researchMethod :InterviewMethod}
WHERE
{
   {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"interview")).}
   UNION
     {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"focus group")).}
}

INSERT {?work :researchMethod :ExperimentalMethod}
WHERE
{
   {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"experiment")).}
   UNION
     {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"control group")).}
     UNION
     {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"experimental design")).}
     UNION
     {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"experimental method")).}
}

######## Outcomes 

### Disposition outcomes

INSERT {?work :outcome :DispositionOutcomes}
WHERE
{
   {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"attitude")).}
   UNION
   {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"value")).}
     UNION
   {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"interest")).}
       UNION
   {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"emotion")).}
}

##### Knowledge and skill

INSERT {?work :outcome :KnowledgeOutcomes}
WHERE
{
   {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"cognitive")).}
    UNION
   {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"cognition")).}
   UNION
   {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"knowledge")).}
     UNION
   {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"skill")).}
    UNION
   {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"perception")).}
     UNION
   {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"problem-solving")).}
    UNION
     {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"achievement")).}
     UNION
     {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"thinking")).}
     UNION
     {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"creativity")).}
     UNION
     {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"academic")).}
}


########## The science angles

INSERT {?work :science :EarthScience}
WHERE
{
   {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"earth")).}
   UNION
   {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"geo")).}
}

INSERT {?work :science :ClimateScience}
WHERE
{
   {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"climate")).}
   UNION
   {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"warming")).}
   UNION
   {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"greenhouse effect")).}
}

INSERT {?work :science :BioScience}
WHERE
{
   {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"biodiversity")).}
   UNION
   {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"biology")).}
   UNION
   {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"ecology")).}
     UNION
   {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"species")).}
     UNION
   {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"bioengeneering")).}
}

INSERT {?work :science :SustainabilityEducation}
WHERE
{
   {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"sustainability")).}
    UNION
   {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"sustainable")).}
   UNION
   {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"energy")).}
    UNION
   {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"urban planning")).}
}

######## Pedagogy

INSERT {?work :pedagogy :OutDoorEducation}
WHERE
{
   {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"outdoor")).}
     UNION
   {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"field setting")).}
}

INSERT {?work :pedagogy :LearningCommunity}
WHERE
{
   {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"learning community")).}
     UNION
   {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"social learning")).}
}


######## Educational Levels 

INSERT {?work lrmi:educationalLevel :GradesKto5}
WHERE
{
   {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"preschool")).}
    UNION
   {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"pre-school")).}
     UNION
   {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"elementary school")).}
   UNION
   {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"kindergarden")).}
    UNION
   {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"primary")).}
     UNION
   {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"child")).}
}


INSERT {?work lrmi:educationalLevel :Grades6to8}
WHERE
{
   {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"middle school")).}
    UNION
   {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"grade 6")).}
   UNION
   {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"grade 7")).}
    UNION
   {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"grade 8")).}
}

INSERT {?work lrmi:educationalLevel :Grades9to12}
WHERE
{
   {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"high school")).}
    UNION
   {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"grade 9")).}
   UNION
   {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"grade 10")).}
    UNION
   {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"grade 11")).}
    UNION
   {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"grade 12")).}
     UNION
   {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"adolescent")).}
}

INSERT {?work lrmi:educationalLevel :TertiaryLevel}
WHERE
{
   {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"college")).}
    UNION
   {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"university")).}
     UNION
   {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"tertiary")).}
   UNION
   {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"tafe")).}
}

INSERT {?work lrmi:educationalLevel :TeacherTraining}
WHERE
{
   {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"teacher training")).}
    UNION
   {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"pre-service teachers")).}
     UNION
   {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"teacher education")).}
}



