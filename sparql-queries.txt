PREFIX : <http://coolfutures.net/rdf/2021/edtech#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dct: <http://purl.org/dc/terms/>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX edtech: <http://coolfutures.net/rdf/2021/edtech#>

######## one step up 

select  ?concept1 ?concept2
{
    ?concept1 skos:broader ?concept2
}

######### to the top from a concept

select  ?concept2
{
    :LabBasedLearning skos:broader+/skos:broader ?concept2
}


######### construct the narrower relation 

construct {?c1 skos:narrower ?c2}  
where
{
    ?c2  skos:broader ?c1
}

############ Add the narrower relation to the graph

insert {?c1 skos:narrower ?c2}  
where
{
    ?c2  skos:broader ?c1
}

### Walk down and find all works with are narrower than the Outcomes concept
# The `+` does path traversal. 

select  ?work ?concept2
{
    :Outcomes skos:narrower+ ?concept2.
    ?work :assessedOutcome ?concept2.
}

####### Mapping the keywords to concepts   ###########

### Make author keywords index keywords
# in case there are no indexKeywords

CONSTRUCT {?work :indexKeywords ?index2}
  WHERE
  {
    ?work a dct:BibliographicReference . 
    ?work :authorKeywords ?index2 . 
    FILTER NOT EXISTS {?work :indexKeywords ?index1}
  }


### Concept eLearning and other high-level concepts

INSERT {?work :technology :eLearning}
where
{
    ?work a dct:BibliographicResource . 
    ?work edtech:indexKeywords ?index . 
    FILTER (CONTAINS(?index,"e-learning") ). 
    
}

INSERT {?work :technology :CAI}
WHERE 
{
  {
    ?work edtech:indexKeywords ?index . 
    FILTER (CONTAINS(?index,"computer-aided instruction") ).
  }
  UNION 
    {?work edtech:indexKeywords ?index . 
    FILTER (CONTAINS(?index, "computer-based instruction") ).}
}



### Games

INSERT {?work :technology :Game}
WHERE
{
    {
    ?work edtech:indexKeywords ?index . 
     FILTER (CONTAINS(?index,"computer game") ).}
  UNION
    {
    ?work edtech:indexKeywords ?index . 
     FILTER (CONTAINS(?index,"digital game") ).}
  UNION
    {
    ?work edtech:indexKeywords ?index . 
     FILTER (CONTAINS(?index,"game-based learning") ).}
}

### Programming


INSERT {?work :technology :Programming}
WHERE
{
   {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"programming") ).}
    UNION
    {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"software engineering") ).}
    UNION
    {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"software testing") ).}
	UNION
    {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"software prototyping") ).}
    UNION
    {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"software design") ).}
    UNION
    {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"software development") ).}
    UNION
    {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"program language") ).}
    UNION
    {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"software architecture") ).}
}


### MultiMedia

INSERT {?work :technology :MultiMedia}
WHERE
{
    {?work :indexKeywords ?index . 
        FILTER (CONTAINS(?index, "digital story telling")) .} 
    UNION 
    {?work :indexKeywords ?index . 
                FILTER (CONTAINS(?index, "video")). } 
                UNION 
    {?work :indexKeywords ?index . 
                FILTER (CONTAINS(?index, "photography")). } 
                UNION 
    {?work :indexKeywords ?index . 
                FILTER (CONTAINS(?index, "music")). } 
    UNION 
    {?work :indexKeywords ?index . 
                FILTER (CONTAINS(?index, "audio")) .} 
    UNION 
    {?work :indexKeywords ?index . 
                FILTER (CONTAINS(?index, "language technology")) .} 
}

### Research software applications

INSERT {?work :technology :GIS}
WHERE
{
   {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"geographic information system")).}
   UNION
   {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"geomapping")).}
     UNION
   {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"google earth")).}
}


#### Research methods used in a study


INSERT {?work :researchMethod :LitReview}
WHERE
{
   {?work :indexKeywords ?index .
     FILTER (CONTAINS(?index,"literature review")).}
}

